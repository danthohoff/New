import matplotlib.pyplot as plt
import pandas as pd
from sklearn.linear_model import LinearRegression
import numpy as np

def plot_linear_regression(df: pd.DataFrame, x_col: str, y_col: str):
    # Daten vorbereiten
    X = df[[x_col]].values  # 2D für sklearn
    y = df[y_col].values

    # Modell fitten
    model = LinearRegression()
    model.fit(X, y)

    # Steigung und Achsenabschnitt
    slope = model.coef_[0]
    intercept = model.intercept_

    print(f"Steigung (m): {slope:.4f}")
    print(f"Achsenabschnitt (b): {intercept:.4f}")

    # Vorhersagewerte für Plot
    x_range = np.linspace(X.min(), X.max(), 100).reshape(-1, 1)
    y_pred = model.predict(x_range)

    # Plot
    plt.figure(figsize=(8, 6))
    plt.scatter(X, y, color="blue", label="Datenpunkte")
    plt.plot(x_range, y_pred, color="red", label="Regressionsgerade")
    plt.xlabel(x_col)
    plt.ylabel(y_col)
    plt.title("Lineare Regression")
    plt.legend()

    # Text mit Gleichung ins Plot
    eq_text = f"y = {slope:.2f}x + {intercept:.2f}"
    plt.text(0.05, 0.95, eq_text, transform=plt.gca().transAxes,
             fontsize=12, verticalalignment='top',
             bbox=dict(boxstyle="round", facecolor="white", alpha=0.5))

    plt.show()