# pip install folium pandas geopandas

import json
import pandas as pd
import folium
from folium.plugins import MarkerCluster

# -------------------------------------------------
BS_CSV = "betriebsstellen_mit_bundesland.csv"
BUND_PATH = "bundeslaender.geojson"   # dein lokales GeoJSON
OUT_HTML = "betriebsstellen_karte.html"
# -------------------------------------------------

# 1) Betriebsstellen laden
bs = pd.read_csv(BS_CSV).dropna(subset=["lat", "lon"]).copy()
center = [bs["lat"].mean(), bs["lon"].mean()] if len(bs) else [51.163, 10.447]

# 2) Bundesländer-GeoJSON lokal einlesen
with open(BUND_PATH, "r", encoding="utf-8") as f:
    laender_geojson = json.load(f)

# Hilfsfunktion: passende Namensspalte finden
def pick_name_key(geojson_dict):
    feats = geojson_dict.get("features", [])
    if not feats:
        return None
    props = feats[0].get("properties", {}) or {}
    for c in ["GEN", "NAME", "name", "NAME_1", "Bundesland", "lan_name", "land_name", "bez"]:
        if c in props:
            return c
    # Fallback: erste Property, falls vorhanden
    return list(props.keys())[0] if props else None

name_key = pick_name_key(laender_geojson)

# 3) Karte erstellen
m = folium.Map(location=center, zoom_start=6, tiles="cartodbpositron", control_scale=True)

# 4) Ländergrenzen-Overlay (Tooltip separat anhängen)
def style_fn(_):
    return {"fillOpacity": 0.05, "weight": 1.0, "color": "#555555"}

def highlight_fn(_):
    return {"weight": 2.0, "color": "#000000", "fillOpacity": 0.1}

gj = folium.GeoJson(
    laender_geojson,
    name="Bundesländer",
    style_function=style_fn,
    highlight_function=highlight_fn,
)
if name_key:
    folium.GeoJsonTooltip(fields=[name_key], aliases=["Bundesland:"], sticky=False).add_to(gj)
gj.add_to(m)

# 5) MarkerCluster für Betriebsstellen
cluster = MarkerCluster(name="Betriebsstellen").add_to(m)

for _, row in bs.iterrows():
    bl = row.get("bundesland") if pd.notna(row.get("bundesland")) else "unbekannt"
    popup = folium.Popup(
        html=f"<b>{row['betriebsstelle']}</b><br/>Bundesland: {bl}<br/>({row['lat']:.6f}, {row['lon']:.6f})",
        max_width=300,
    )
    folium.CircleMarker(
        location=[row["lat"], row["lon"]],
        radius=4,
        weight=1,
        color="#222222",
        fill=True,
        fill_opacity=0.9,
        fill_color="#1f77b4",
        tooltip=f"{row['betriebsstelle']} – {bl}",
        popup=popup,
    ).add_to(cluster)

folium.LayerControl(collapsed=False).add_to(m)
m.fit_bounds(m.get_bounds())
m.save(OUT_HTML)
print(f"✔ Karte gespeichert: {OUT_HTML}")